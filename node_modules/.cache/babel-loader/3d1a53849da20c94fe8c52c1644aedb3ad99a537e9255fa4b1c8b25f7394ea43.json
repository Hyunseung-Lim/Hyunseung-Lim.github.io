{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nexport const useInfiniteCarousel = (images, autoSlideInterval = 5000, transitionDuration = 1000) => {\n  _s();\n  const extendedImages = [images[images.length - 1], ...images, images[0]];\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const nextSlide = useCallback(() => {\n    if (!isTransitioning) {\n      setIsTransitioning(true);\n      setCurrentIndex(prevIndex => prevIndex + 1);\n    }\n  }, [isTransitioning]);\n  useEffect(() => {\n    const interval = setInterval(nextSlide, autoSlideInterval);\n    return () => clearInterval(interval);\n  }, [nextSlide, autoSlideInterval]);\n  useEffect(() => {\n    if (!isTransitioning) return;\n    const handleTransitionEnd = () => {\n      setIsTransitioning(false);\n      if (currentIndex === extendedImages.length - 1) {\n        setTimeout(() => setCurrentIndex(1), 0);\n      }\n      if (currentIndex === 0) {\n        setTimeout(() => setCurrentIndex(images.length), 0);\n      }\n    };\n    const timeout = setTimeout(handleTransitionEnd, transitionDuration);\n    return () => clearTimeout(timeout);\n  }, [currentIndex, extendedImages.length, images.length, isTransitioning, transitionDuration]);\n  const sliderStyle = {\n    width: `${extendedImages.length * 100}%`,\n    transform: `translateX(-${currentIndex * 100 / extendedImages.length}%)`,\n    transition: isTransitioning ? `transform ${transitionDuration}ms ease-in-out` : 'none'\n  };\n  return {\n    extendedImages,\n    currentIndex,\n    isTransitioning,\n    sliderStyle\n  };\n};\n_s(useInfiniteCarousel, \"BR8Oy7XeBW+9NawfeVymr+Qka3M=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useInfiniteCarousel","images","autoSlideInterval","transitionDuration","_s","extendedImages","length","currentIndex","setCurrentIndex","isTransitioning","setIsTransitioning","nextSlide","prevIndex","interval","setInterval","clearInterval","handleTransitionEnd","setTimeout","timeout","clearTimeout","sliderStyle","width","transform","transition"],"sources":["C:/Users/HyunseungLim/Desktop/git/Hyunseung-Lim.github.io/src/hooks/useInfiniteCarousel.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nexport const useInfiniteCarousel = (images, autoSlideInterval = 5000, transitionDuration = 1000) => {\n  const extendedImages = [images[images.length - 1], ...images, images[0]];\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  const nextSlide = useCallback(() => {\n    if (!isTransitioning) {\n      setIsTransitioning(true);\n      setCurrentIndex(prevIndex => prevIndex + 1);\n    }\n  }, [isTransitioning]);\n\n  useEffect(() => {\n    const interval = setInterval(nextSlide, autoSlideInterval);\n    return () => clearInterval(interval);\n  }, [nextSlide, autoSlideInterval]);\n\n  useEffect(() => {\n    if (!isTransitioning) return;\n\n    const handleTransitionEnd = () => {\n      setIsTransitioning(false);\n      \n      if (currentIndex === extendedImages.length - 1) {\n        setTimeout(() => setCurrentIndex(1), 0);\n      }\n      \n      if (currentIndex === 0) {\n        setTimeout(() => setCurrentIndex(images.length), 0);\n      }\n    };\n\n    const timeout = setTimeout(handleTransitionEnd, transitionDuration);\n    return () => clearTimeout(timeout);\n  }, [currentIndex, extendedImages.length, images.length, isTransitioning, transitionDuration]);\n\n  const sliderStyle = {\n    width: `${extendedImages.length * 100}%`,\n    transform: `translateX(-${(currentIndex * 100) / extendedImages.length}%)`,\n    transition: isTransitioning ? `transform ${transitionDuration}ms ease-in-out` : 'none'\n  };\n\n  return {\n    extendedImages,\n    currentIndex,\n    isTransitioning,\n    sliderStyle\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAExD,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,MAAM,EAAEC,iBAAiB,GAAG,IAAI,EAAEC,kBAAkB,GAAG,IAAI,KAAK;EAAAC,EAAA;EAClG,MAAMC,cAAc,GAAG,CAACJ,MAAM,CAACA,MAAM,CAACK,MAAM,GAAG,CAAC,CAAC,EAAE,GAAGL,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;EACxE,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMc,SAAS,GAAGZ,WAAW,CAAC,MAAM;IAClC,IAAI,CAACU,eAAe,EAAE;MACpBC,kBAAkB,CAAC,IAAI,CAAC;MACxBF,eAAe,CAACI,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IAC7C;EACF,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErBX,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAGC,WAAW,CAACH,SAAS,EAAET,iBAAiB,CAAC;IAC1D,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,SAAS,EAAET,iBAAiB,CAAC,CAAC;EAElCJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,eAAe,EAAE;IAEtB,MAAMO,mBAAmB,GAAGA,CAAA,KAAM;MAChCN,kBAAkB,CAAC,KAAK,CAAC;MAEzB,IAAIH,YAAY,KAAKF,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;QAC9CW,UAAU,CAAC,MAAMT,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACzC;MAEA,IAAID,YAAY,KAAK,CAAC,EAAE;QACtBU,UAAU,CAAC,MAAMT,eAAe,CAACP,MAAM,CAACK,MAAM,CAAC,EAAE,CAAC,CAAC;MACrD;IACF,CAAC;IAED,MAAMY,OAAO,GAAGD,UAAU,CAACD,mBAAmB,EAAEb,kBAAkB,CAAC;IACnE,OAAO,MAAMgB,YAAY,CAACD,OAAO,CAAC;EACpC,CAAC,EAAE,CAACX,YAAY,EAAEF,cAAc,CAACC,MAAM,EAAEL,MAAM,CAACK,MAAM,EAAEG,eAAe,EAAEN,kBAAkB,CAAC,CAAC;EAE7F,MAAMiB,WAAW,GAAG;IAClBC,KAAK,EAAG,GAAEhB,cAAc,CAACC,MAAM,GAAG,GAAI,GAAE;IACxCgB,SAAS,EAAG,eAAef,YAAY,GAAG,GAAG,GAAIF,cAAc,CAACC,MAAO,IAAG;IAC1EiB,UAAU,EAAEd,eAAe,GAAI,aAAYN,kBAAmB,gBAAe,GAAG;EAClF,CAAC;EAED,OAAO;IACLE,cAAc;IACdE,YAAY;IACZE,eAAe;IACfW;EACF,CAAC;AACH,CAAC;AAAChB,EAAA,CAhDWJ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}