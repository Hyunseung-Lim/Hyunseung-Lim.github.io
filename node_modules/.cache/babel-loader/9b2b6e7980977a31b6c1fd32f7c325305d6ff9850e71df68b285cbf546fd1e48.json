{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HyunseungLim\\\\Desktop\\\\git\\\\Hyunseung-Lim.github.io\\\\src\\\\Pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { Footer } from '../Components/Footer/footer';\nimport '.pages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPage = props => {\n  _s();\n  // 슬라이드에 사용할 이미지 목록을 배열로 정의 (필요에 따라 파일명을 추가)\n  const images = ['/images/banner/dis2024/img1.jpg', '/images/banner/dis2024/img2.jpg', '/images/banner/dis2024/img3.jpg'\n  // '/images/banner/dis2024/img4.jpg', ... 등 추가\n  ];\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  // 3초마다 다음 이미지로 전환하는 effect\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentImageIndex(prevIndex => (prevIndex + 1) % images.length);\n    }, 3000); // 3000ms = 3초\n    return () => clearInterval(intervalId);\n  }, [images.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentImageIndex],\n        alt: `banner ${currentImageIndex + 1}`,\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-text\",\n        children: \"dis 2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MainPage, \"iwdYV/csWqs0gMEM0R8yiwCHnVs=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Topbar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","props","_s","images","currentImageIndex","setCurrentImageIndex","intervalId","setInterval","prevIndex","length","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/HyunseungLim/Desktop/git/Hyunseung-Lim.github.io/src/Pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Topbar } from '../Components/Topbar/topbar';\r\nimport { Footer } from '../Components/Footer/footer';\r\n\r\nimport '.pages.css';\r\n\r\nexport const MainPage = (props) => {\r\n  // 슬라이드에 사용할 이미지 목록을 배열로 정의 (필요에 따라 파일명을 추가)\r\n  const images = [\r\n    '/images/banner/dis2024/img1.jpg',\r\n    '/images/banner/dis2024/img2.jpg',\r\n    '/images/banner/dis2024/img3.jpg'\r\n    // '/images/banner/dis2024/img4.jpg', ... 등 추가\r\n  ];\r\n\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  // 3초마다 다음 이미지로 전환하는 effect\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentImageIndex(prevIndex => (prevIndex + 1) % images.length);\r\n    }, 3000); // 3000ms = 3초\r\n    return () => clearInterval(intervalId);\r\n  }, [images.length]);\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className='banner'>\r\n        <img \r\n          src={images[currentImageIndex]} \r\n          alt={`banner ${currentImageIndex + 1}`} \r\n          style={{ width: '100%', height: 'auto' }}\r\n        />\r\n        <div className=\"banner-text\">\r\n          dis 2024\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,6BAA6B;AACpD,SAASC,MAAM,QAAQ,6BAA6B;AAEpD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpB,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACjC;EACA,MAAMC,MAAM,GAAG,CACb,iCAAiC,EACjC,iCAAiC,EACjC;EACA;EAAA,CACD;EAED,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,oBAAoB,CAACG,SAAS,IAAI,CAACA,SAAS,GAAG,CAAC,IAAIL,MAAM,CAACM,MAAM,CAAC;IACpE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACV,OAAO,MAAMC,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC,EAAE,CAACH,MAAM,CAACM,MAAM,CAAC,CAAC;EAEnB,oBACEZ,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACH,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlB,OAAA;MAAKmB,SAAS,EAAC,QAAQ;MAAAL,QAAA,gBACrBd,OAAA;QACEoB,GAAG,EAAEd,MAAM,CAACC,iBAAiB,CAAE;QAC/Bc,GAAG,EAAG,UAASd,iBAAiB,GAAG,CAAE,EAAE;QACvCe,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFlB,OAAA;QAAKmB,SAAS,EAAC,aAAa;QAAAL,QAAA,EAAC;MAE7B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNlB,OAAA,CAACF,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP,CAAC;AAACb,EAAA,CAnCWF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}